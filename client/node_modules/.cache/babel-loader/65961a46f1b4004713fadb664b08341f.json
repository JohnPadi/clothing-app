{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mr_john_padi\\\\Documents\\\\clothing-app\\\\src\\\\components\\\\SignUp\\\\SignUp.jsx\";\nimport React, { useState } from 'react';\nimport './SignUp.scss';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { signUpStart } from '../../redux/user/userActions';\nimport { connect } from 'react-redux';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match!\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"I don't have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Sign Up with your Email and Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-upForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/mr_john_padi/Documents/clothing-app/src/components/SignUp/SignUp.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from'react';\r\nimport './SignUp.scss';\r\nimport FormInput from '../FormInput/FormInput';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport {signUpStart} from '../../redux/user/userActions';\r\nimport {connect} from 'react-redux';\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n\tconst [userCredentials, setUserCredentials] = useState({\r\n\t\t\tdisplayName: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tconfirmPassword: ''\r\n\t\t})\r\n\r\n\tconst {displayName, email, password, confirmPassword} = userCredentials;\r\n\tconst handleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tif(password !== confirmPassword){\r\n\t\t\talert(\"Passwords don't match!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsignUpStart({displayName, email, password});\r\n\t};\r\n\r\n\tconst handleChange = event => {\r\n\t\tconst {name, value} = event.target;\r\n\t\tsetUserCredentials({...userCredentials, [name]: value});\r\n\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className='sign-up'>\r\n\t\t\t\t<h2 className='title'>I don't have an account</h2>\r\n\t\t\t\t<span>Sign Up with your Email and Password</span>\r\n\t\t\t\t<form className='sign-upForm' \r\n\t\t\t\tonSubmit={handleSubmit}>\r\n\t\t\t\t\t<FormInput type='text' name='displayName'\r\n\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Display Name' required />\r\n\t\t\t\t\t<FormInput type='email' name='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Email' required />\r\n\t\t\t\t\t<FormInput type='password' name='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Password' required />\r\n\t\t\t\t\t<FormInput type='password' name='confirmPassword'\r\n\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Confirm Password' required />\r\n\t\t\t\t\t<CustomButton type='submit'>SIGN UP</CustomButton>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tsignUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}
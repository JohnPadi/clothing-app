{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mr_john_padi\\\\Documents\\\\clothing-app\\\\src\\\\components\\\\SignIn\\\\SignIn.jsx\";\nimport React from 'react';\nimport './SignIn.scss';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/userActions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, \"Sign in with your Email & Password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/mr_john_padi/Documents/clothing-app/src/components/SignIn/SignIn.jsx"],"names":["React","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,8BAAlD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAQlBC,YARkB,GAQH,MAAMC,KAAN,IAAe;AAC7BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACR,QAAAA;AAAD,UAAqB,KAAKK,KAAhC;AACA,YAAM;AAACI,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAoB,KAAKC,KAA/B;AACAX,MAAAA,gBAAgB,CAACS,KAAD,EAAQC,QAAR,CAAhB;AACA,KAbiB;;AAAA,SAelBE,YAfkB,GAeHL,KAAK,IAAI;AACvB,YAAM;AAACM,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAgBP,KAAK,CAACQ,MAA5B;AACA,WAAKC,QAAL,CAAc;AAAC,SAACF,IAAD,GAAQD;AAAT,OAAd;AACA,KAlBiB;;AAEjB,SAAKF,KAAL,GAAa;AACZF,MAAAA,KAAK,EAAC,EADM;AAEZC,MAAAA,QAAQ,EAAC;AAFG,KAAb;AAIA;;AAcDO,EAAAA,MAAM,GAAE;AACP,UAAM;AAAClB,MAAAA;AAAD,QAAsB,KAAKM,KAAjC;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFD,eAIC;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,IAAI,EAAC,OAA7B;AAAqC,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAAvD;AACA,MAAA,YAAY,EAAE,KAAKG,YADnB;AACiC,MAAA,KAAK,EAAC,OADvC;AAC+C,MAAA,QAAQ,MADvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAGC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,IAAI,EAAC,UAAhC;AACA,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,QADlB;AAC4B,MAAA,YAAY,EAAE,KAAKE,YAD/C;AAEA,MAAA,KAAK,EAAC,UAFN;AAEiB,MAAA,QAAQ,MAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAMC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,eAEC,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAEb,iBAArC;AAAwD,MAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFD,CAND,CAJD,CADD;AAoBA;;AA3CkC;;AA8CpC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCpB,EAAAA,iBAAiB,EAAE,MAAMoB,QAAQ,CAACpB,iBAAiB,EAAlB,CADM;AAEvCC,EAAAA,gBAAgB,EAAE,CAACS,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAACnB,gBAAgB,CAAC;AAACS,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFR,CAAL,CAAnC;;AAKA,eAAeT,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiChB,MAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport './SignIn.scss';\r\nimport FormInput from '../FormInput/FormInput';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/userActions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass SignIn extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail:'',\r\n\t\t\tpassword:''\r\n\t\t};\r\n\t}\r\n\r\n\thandleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {emailSignInStart} = this.props;\r\n\t\tconst {email, password} = this.state;\r\n\t\temailSignInStart(email, password);\r\n\t};\r\n\r\n\thandleChange = event => {\r\n\t\tconst {value, name} = event.target;\r\n\t\tthis.setState({[name]: value})\r\n\t};\r\n\r\n\trender(){\r\n\t\tconst {googleSignInStart} = this.props;\r\n\t\treturn(\r\n\t\t\t<div className='sign-in'>\r\n\t\t\t\t<h2>I already have an account</h2>\r\n\t\t\t\t<span>Sign in with your Email & Password</span>\r\n\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<FormInput name='email' type='email' value={this.state.email} \r\n\t\t\t\t\thandleChange={this.handleChange} label='email' required/>\r\n\t\t\t\t\t<FormInput name='password' type='password' \r\n\t\t\t\t\tvalue={this.state.password} handleChange={this.handleChange}  \r\n\t\t\t\t\tlabel='password' required/>\r\n\t\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t\t<CustomButton type='submit'>Sign in</CustomButton>\r\n\t\t\t\t\t\t<CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n\t\t\t\t\t\t\tSign in with Google\r\n\t\t\t\t\t\t</CustomButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\r\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}
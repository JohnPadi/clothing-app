{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shopTypes';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shopActions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["C:/Users/mr_john_padi/Documents/clothing-app/src/redux/shop/shopSagas.js"],"names":["takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,8BAAzD;AACA,SACCC,uBADD,EAECC,uBAFD,QAGO,eAHP;AAKA,OAAO,UAAUC,qBAAV,GAAiC;AACvC,MAAG;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACA,GALD,CAKE,OAAMC,KAAN,EAAY;AACb,UAAMb,GAAG,CAACM,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,oBAAV,GAAgC;AACtC,QAAMjB,UAAU,CAACI,eAAe,CAACc,uBAAjB,EAChBT,qBADgB,CAAhB;AAGA;AAED,OAAO,UAAUU,SAAV,GAAqB;AAC3B,QAAMhB,GAAG,CAAC,CACTF,IAAI,CAACgB,oBAAD,CADK,CAAD,CAAT;AAGA","sourcesContent":["import {takeLatest, call, put, all} from 'redux-saga/effects';\r\nimport ShopActionTypes from './shopTypes';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.util';\r\nimport {\r\n\tfetchCollectionsSuccess,\r\n\tfetchCollectionsFailure\r\n} from './shopActions';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n\ttry{\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\t\t\r\n\t} catch(error){\r\n\t\tyield put(fetchCollectionsFailure(error.message))\r\n\t}\r\n}\r\n\r\nexport function* fetchCollectionStart(){\r\n\tyield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,\r\n\tfetchCollectionsAsync\r\n\t);\r\n}\r\n\r\nexport function* shopSagas(){\r\n\tyield all([\r\n\t\tcall(fetchCollectionStart)\r\n\t]);\r\n}"]},"metadata":{},"sourceType":"module"}
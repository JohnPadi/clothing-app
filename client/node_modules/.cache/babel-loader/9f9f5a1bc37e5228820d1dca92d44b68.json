{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mr_john_padi\\\\Documents\\\\clothing-app\\\\src\\\\pages\\\\Shop\\\\Shop.jsx\";\nimport React from 'react'; //import Preview from '../../components/Preview/Preview';\n\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport { Route } from 'react-router-dom';\nimport Collection from '../Collection/Collection'; //import {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.util';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nimport { selectIsCollectionFetching } from '../../redux/shop/shopSelectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass Shop extends React.Component {\n  /*state = {loading: true};\r\n  unsubscribeFromSnapshot = null;\r\n  */\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n    /*const {updateCollections} =this.props;\r\n    const collectionRef = firestore.collection('collections');\r\n    collectionRef.get().then(\r\n    \tsnapshot => {\r\n    \tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    \tupdateCollections(collectionsMap);\r\n    \tthis.setState({loading: false});\r\n    }); */\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props; //const {loading} = this.state;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 57\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 65\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isCollectionFetching: selectIsCollectionFetching(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()) //updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["C:/Users/mr_john_padi/Documents/clothing-app/src/pages/Shop/Shop.jsx"],"names":["React","connect","CollectionsOverview","Route","Collection","fetchCollectionsStartAsync","WithSpinner","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionWithSpinner","Shop","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,SAAQC,0BAAR,QAAyC,8BAAzC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMO,qBAAqB,GAAGH,WAAW,CAACF,UAAD,CAAzC;;AAEA,MAAMM,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAkC;AACjC;AACD;AACA;AAECC,EAAAA,iBAAiB,GAAE;AAClB,UAAM;AAACP,MAAAA;AAAD,QAA+B,KAAKQ,KAA1C;AACAR,IAAAA,0BAA0B;AAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAEDS,EAAAA,MAAM,GAAE;AACP,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgC,KAAKH,KAA3C,CADO,CAEP;;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAEJ,KAAK,iBAAG,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEJ,KAAK,iBAAG,oBAAC,qBAAD;AAAuB,QAAA,SAAS,EAAEG;AAAlC,SAA4DH,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAMA;;AA3BgC;;AA8BlC,MAAMK,eAAe,GAAIC,KAAD,KAAY;AACnCH,EAAAA,oBAAoB,EAAET,0BAA0B,CAACY,KAAD;AADb,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACvChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B,CADH,CAEvC;;AAFuC,CAAL,CAAnC;;AAKA,eAAeJ,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,IAA7C,CAAf","sourcesContent":["import React from 'react';\r\n//import Preview from '../../components/Preview/Preview';\r\nimport {connect} from 'react-redux';\r\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\r\nimport {Route} from 'react-router-dom';\r\nimport Collection from '../Collection/Collection';\r\n//import {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.util';\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shopActions';\r\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\r\nimport {selectIsCollectionFetching} from '../../redux/shop/shopSelectors';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionWithSpinner = WithSpinner(Collection);\r\n\r\nclass Shop extends React.Component{\r\n\t/*state = {loading: true};\r\n\tunsubscribeFromSnapshot = null;\r\n\t*/\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {fetchCollectionsStartAsync} = this.props;\r\n\t\tfetchCollectionsStartAsync();\r\n\t\t/*const {updateCollections} =this.props;\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tcollectionRef.get().then(\r\n\t\t\tsnapshot => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tupdateCollections(collectionsMap);\r\n\t\t\tthis.setState({loading: false});\r\n\t\t}); */\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {match, isCollectionFetching} = this.props;\r\n\t\t//const {loading} = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='shop'>\r\n\t\t\t\t<Route exact path={`${match.path}`} render={props=>(<CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props}/>)}/>\r\n\t\t\t\t<Route path={`${match.path}/:collectionId`} render={props=>(<CollectionWithSpinner isLoading={isCollectionFetching} {...props}/>)}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisCollectionFetching: selectIsCollectionFetching(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n\t//updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\r\n"]},"metadata":{},"sourceType":"module"}
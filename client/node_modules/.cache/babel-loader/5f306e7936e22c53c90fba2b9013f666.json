{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAVWCNEvG27m6Vm6VfjViA8AzyyOiGkV-w\",\n  authDomain: \"crown-db-d3d7b.firebaseapp.com\",\n  databaseURL: \"https://crown-db-d3d7b.firebaseio.com\",\n  projectId: \"crown-db-d3d7b\",\n  storageBucket: \"crown-db-d3d7b.appspot.com\",\n  messagingSenderId: \"44407604361\",\n  appId: \"1:44407604361:web:9810205d5b53c6955df258\",\n  measurementId: \"G-YFP4VEEEDD\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('Error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n}; //For Google authentication:\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //Setting up Google authentication utility:\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/mr_john_padi/Documents/clothing-app/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,aANR;AAOXC,EAAAA,KAAK,EAAE,0CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAoB;AACnB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAqBZ,QAA3B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAG;AACF,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AACJC,QAAAA,KADI;AACGC,QAAAA,SADH;AACc,WAAGZ;AADjB,OAAZ,CAAN;AAGA,KAJD,CAIC,OAAMe,KAAN,EAAY;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACA;AACD;;AACD,SAAOf,OAAP;AACA,CAjBM;AAmBPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACxE,QAAMC,aAAa,GAAGnB,SAAS,CAACoB,UAAV,CAAqBH,aAArB,CAAtB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAME,IAAI,GAAGnC,QAAQ,CAACmC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CACP;;AACA,MAAMsB,QAAQ,GAAG,IAAIpC,QAAQ,CAACmC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAET,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAVWCNEvG27m6Vm6VfjViA8AzyyOiGkV-w\",\r\n    authDomain: \"crown-db-d3d7b.firebaseapp.com\",\r\n    databaseURL: \"https://crown-db-d3d7b.firebaseio.com\",\r\n    projectId: \"crown-db-d3d7b\",\r\n    storageBucket: \"crown-db-d3d7b.appspot.com\",\r\n    messagingSenderId: \"44407604361\",\r\n    appId: \"1:44407604361:web:9810205d5b53c6955df258\",\r\n    measurementId: \"G-YFP4VEEEDD\"\r\n  }\r\n\r\n  export const createUserProfileDocument = async(userAuth, additionalData) => {\r\n  \tif(!userAuth) return;\r\n  \tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  \tconst snapShot = await userRef.get();\r\n  \tconsole.log(snapShot);\r\n  \tif(!snapShot.exists){\r\n  \t\tconst {displayName,email} =userAuth;\r\n  \t\tconst createdAt = new Date();\r\n  \t\ttry{\r\n  \t\t\tawait userRef.set({\r\n  \t\t\t\tdisplayName, email, createdAt, ...additionalData\r\n  \t\t\t})\r\n  \t\t}catch(error){\r\n  \t\t\tconsole.log('Error creating user', error.message);\r\n  \t\t}\r\n  \t}\r\n  \treturn userRef;\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    console.log(collectionRef);\r\n  }\r\n\r\n  //For Google authentication:\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n  //Setting up Google authentication utility:\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'})\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}